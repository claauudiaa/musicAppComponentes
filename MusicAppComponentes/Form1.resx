<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>